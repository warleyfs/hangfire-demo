services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - hangfire-network
    links:
      - api1
      - api2
    depends_on:
      api1:
        condition: service_healthy
      api2:
        condition: service_healthy
  
  api1:
    container_name: hangfire-api-1
    image: warleyfs/hangfire-demo-arm64:1.0.24
    tty: true
    environment:
      - SERVER_ID = 1
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - mongo
    networks:
      - hangfire-network
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/healthz || exit 1
      interval: 30s
      retries: 5
      start_period: 20s
      timeout: 10s
  
  api2:
    container_name: hangfire-api-2
    image: warleyfs/hangfire-demo-arm64:1.0.24
    tty: true
    environment:
      - SERVER_ID = 2
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    depends_on:
      - mongo
    networks:
      - hangfire-network
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/healthz || exit 1
      interval: 30s
      retries: 5
      start_period: 20s
      timeout: 10s
  
  mongo:
    image: mongo
    environment:
      MONGODB_INITDB_ROOT_USERNAME: root
      MONGODB_INITDB_ROOT_PASSWORD: 123
    ports:
      - "27017:27017"
    volumes:
      - ~/MongoDB:/data/db
    networks:
      - hangfire-network
  
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: "rabbitmq"
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - hangfire-network
    restart: unless-stopped
    
networks:
  hangfire-network:
    driver: bridge